apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_REPO}
  labels:
    app: ${APP_REPO}
    app.kubernetes.io/name: ${APP_REPO}
    app.kubernetes.io/version: ${APP_COMMIT}
    app.kubernetes.io/managed-by: github
    app.kubernetes.io/component: pod
    app.kubernetes.io/part-of: ${APP_REPO}-svc
  annotations:
    app: ${APP_REPO}
    env: ${APP_ENV}
spec:
  replicas: ${DEPLOYMENT_REPLICAS}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ${APP_REPO}
  template:
    metadata:
      labels:
        app: ${APP_REPO}
        version: ${APP_COMMIT}
      annotations:
        sidecar.opentelemetry.io/inject: "true"
        instrumentation.opentelemetry.io/inject-java: "monitoring/instrumentation"
    spec:
      containers:
      - name: ${APP_REPO}
        image: ${REPOSITORY_URL}/${APP_REPO}:${APP_COMMIT}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1000Mi"
            cpu: "500m"
          limits:
            memory: "1000Mi"
        ports:
        - name: http
          containerPort: 8082
          protocol: TCP
        livenessProbe:
          httpGet:
            path: ${K8S_HEALTH_CHECK}
            port: 8082
          initialDelaySeconds: 120
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: ${K8S_HEALTH_CHECK}
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          successThreshold: 1
        env:
        - name: OTEL_METRICS_EXPORTER
          value: "none"
        - name: APP_ENV
          value: ${APP_ENV}
        - name: APP_ACTIVE_PROFILE
          value: ${APP_ENV},fluentd
        - name: APP_SERVER_PORT
          value: '${APP_SERVER_PORT}'
